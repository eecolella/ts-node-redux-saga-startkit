{"version":3,"file":"index-full.js","sourceRoot":"","sources":["../src/index-full.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAmE;AACnE,+DAA4F;AAC5F,8CAAuE;AACvE,yCAA+D;AAE/D;;;;;;;GAOG;AACH,IAAM,WAAW,GAAG,UAAC,KAAS,EAAE,MAAM;IAAjB,sBAAA,EAAA,SAAS;IAC5B,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QACpB,KAAK,WAAW;YACd,MAAM,CAAC,KAAK,GAAG,CAAC,CAAA;QAClB,KAAK,WAAW;YACd,MAAM,CAAC,KAAK,GAAG,CAAC,CAAA;QAClB;YACE,MAAM,CAAC,KAAK,CAAA;IAChB,CAAC;AACH,CAAC,CAAA;AAED;;;;;;;GAOG;AACH;;QACE,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAA;;;CAC5B;AAED;;;;gBACE,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAA;gBAC7B,qBAAM,aAAG,CAAC,EAAC,IAAI,EAAE,WAAW,EAAC,CAAC,EAAA;;gBAA9B,SAA8B,CAAA;;;;CAC/B;AAED;;;oBACE,qBAAM,cAAI,CAAC,SAAS,CAAC,EAAA;;gBAArB,SAAqB,CAAA;;;;CACtB;AAED;;;oBACE,qBAAM,cAAI,CAAC,QAAQ,CAAC,EAAA;;gBAApB,SAAoB,CAAA;gBACpB,qBAAM,cAAI,CAAC,WAAW,CAAC,EAAA;;gBAAvB,SAAuB,CAAA;;;;CACxB;AAED;;;;;;;GAOG;AACH,IAAM,YAAY,GAAG,EAAE,CAAC;AAExB;;;;;;;GAOG;AACH,IAAM,cAAc,GAAG,oBAAoB,EAAE,CAAA;AAC7C,IAAM,UAAU,GAAG,CAAC,cAAc,CAAC,CAAA;AAEtB,QAAA,KAAK,GAAG,mBAAW,CAAC,WAAW,EAAE,YAAY,EAAE,eAAO,CACjE,uBAAe,eAAI,UAAU,GAC7B,+BAAgB,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAC/C,CAAC,CAAA;AAEF,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;AAE5B,gEAAgE","sourcesContent":["import { createStore, applyMiddleware, compose }       from 'redux'\nimport devToolsEnhancer, { composeWithDevTools }                from 'remote-redux-devtools'\nimport { call, put }                          from 'redux-saga/effects'\nimport createSagaMiddleware, { SagaIterator } from 'redux-saga'\n\n/**\n *\n *\n *\n *\n * ~~~ reducer\n *\n */\nconst rootReducer = (state = 0, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n\n/**\n *\n *\n *\n *\n * ~~~ sagas\n *\n */\nfunction* helloSaga() {\n  console.log('Hello Sagas!')\n}\n\nfunction* anotherSaga(): SagaIterator {\n  console.log('Hello Sagas 2!')\n  yield put({type: \"INCREMENT\"})\n}\n\nfunction* someSaga() {\n  yield call(helloSaga)\n}\n\nfunction* rootSaga() {\n  yield call(someSaga)\n  yield call(anotherSaga)\n}\n\n/**\n *\n *\n *\n *\n * ~~~ initial state\n *\n */\nconst initialState = 10;\n\n/**\n *\n *\n *\n *\n * ~~~ store\n *\n */\nconst sagaMiddleware = createSagaMiddleware()\nconst middleware = [sagaMiddleware]\n\nexport const store = createStore(rootReducer, initialState, compose(\n  applyMiddleware(...middleware),\n  devToolsEnhancer({realtime: true, port: 9229})\n))\n\nsagaMiddleware.run(rootSaga)\n\n// store.subscribe(function() { console.log(store.getState()) })\n"]}